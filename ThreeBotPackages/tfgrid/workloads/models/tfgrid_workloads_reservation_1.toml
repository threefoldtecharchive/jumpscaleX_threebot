
@url = tfgrid.workloads.reservation.1
#json of the reservation.data object, will not change over time
0 : json = "" (S)
1 : data_reservation = (O) !tfgrid.workloads.reservation.data.1
#id of threebot which pays for it
2 : customer_tid = (I)
#signature with private key of customer of the json, this guarantees that the data did not change
3 : customer_signature = (S)
#state, allows anyone to see what can happen next e.g. sign means waiting for everyone to sign
#delete means its deployed now we need to wait till enough people sign to delete
4 : next_action = "create,sign,pay,deploy,delete,invalid,deleted" (E)
5 : signatures_provision = (LO) !tfgrid.workloads.reservation.signing.signature.1
6 : signatures_farmer = (LO) !tfgrid.workloads.reservation.signing.signature.1
7 : signatures_delete = (LO) !tfgrid.workloads.reservation.signing.signature.1
8 : epoch = (T)
9 : results = (LO) !tfgrid.workloads.reservation.result.1

@url = tfgrid.workloads.reservation.data.1
#this one does not change over time
0 : description = "" (S)
#need toget to consensus
1 : signing_request_provision = (O) !tfgrid.workloads.reservation.signing.request.1
2 : signing_request_delete = (O) !tfgrid.workloads.reservation.signing.request.1
3 : containers = (LO) !tfgrid.workloads.reservation.container.1
4 : volumes = (LO) !tfgrid.workloads.reservation.volume.1
5 : zdbs = (LO) !tfgrid.workloads.reservation.zdb.1
6 : networks = (LO) !tfgrid.workloads.reservation.network.1
7 : kubernetes = (LO) !tfgrid.workloads.reservation.k8s.1
#till whe is request for provisioning valid, if not signed in required time then obsolete
8 : expiration_provisioning = (T)
#till whe is reservation valid
9 : expiration_reservation = (T)

@url = tfgrid.workloads.reservation.signing.request.1
#part of the reservation.data, because should never be possible to delete this
#threebotids of people who can sign
0 : signers = (LI)
#min nr of people who need to sign
1 : quorum_min = (I)

@url = tfgrid.workloads.reservation.signing.signature.1
#threebotid
0 : tid = (I)
#signature in string form of the json as stored in the root of this obj
1 : signature = (S)
#time of signature
2 : epoch = (T)
