{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Navigation.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Navigation from \"./Navigation.svelte\";\n  import Alerts from \"./components/Alerts.svelte\";\n  import { getAlerts, deleteAll } from \"./data\";\n\n  let alerts;\n  let searchText = \"\";\n  let formatedAlerts = \"\";\n  let currentFilteredAlerts;\n  let isAlertsLoaded = false;\n  let servicesLoading = true;\n  let isAllAlertsDeleted = false;\n  const environments = {\n    ALL: \"ALL\",\n    PROD: \"PRODUCTION\",\n    DEV: \"DEVELOPMENT\",\n    INFRA: \"INFRASTRUCTURE\"\n  };\n\n  let services;\n  const severity = {\n    ALL: \"ALL\",\n    CRITICAL: \"CRITICAL\",\n    MAJOR: \"MAJOR\",\n    MINOR: \"MINOR\",\n    WARNING: \"WARNING\",\n    INDETERMINATE: \"INDETERMINATE\"\n  };\n  const messageTypes = {\n    ALL: \"ALL\",\n    ERROR: \"ERROR\",\n    INFORMATION: \"INFORMATION\",\n    WARNING: \"WARNING\"\n  };\n  const status = { ALL: \"ALL\", OPEN: \"OPEN\", CLOSED: \"CLOSED\", NEW: \"NEW\" };\n  let currentFilters = {\n    service: \"ALL\",\n    messageType: messageTypes.ALL,\n    status: status.ALL\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", function(event) {\n    // your page initialization code here\n    // the DOM will be available here\n    var tab = document.getElementById(\"pills-all-tab\");\n    tab.click();\n  });\n  //Get Data from the API\n  function updateAlerts(environment) {\n    isAlertsLoaded = false;\n    isAllAlertsDeleted = false; //The alerts all available now and not deleted (reintialize the state)\n    alerts = [];\n\n    getAlerts(environment)\n      .then(response => {\n        // handle success\n        let parsedJson = response.data.result;\n        alerts = parsedJson.alerts;\n        formatedAlerts = convertDataToUpperCase(parsedJson.alerts);\n        filterAlerts(formatedAlerts);\n        getServices();\n        isAlertsLoaded = true;\n      })\n      .catch(err => {\n        console.log(\"error \", err);\n      });\n  }\n\n  function updateFilters(selectedService, selectedMessageType, selectedState) {\n    currentFilters = {\n      service: selectedService,\n      messageType: selectedMessageType,\n      status: selectedState\n    };\n    filterAlerts(formatedAlerts);\n  }\n\n  function convertDataToUpperCase(alerts) {\n    for (let i = 0; i < alerts.length; i++) {\n      alerts[i].severity = alerts[i].severity.toUpperCase();\n      alerts[i].service = alerts[i].service.toUpperCase();\n      alerts[i].status = alerts[i].status.toUpperCase();\n      alerts[i].messageType = alerts[i].messageType.toUpperCase();\n    }\n    return alerts;\n  }\n\n  function filterAlerts(filteredAlerts) {\n    if (currentFilters.service != \"ALL\")\n      filteredAlerts = filteredAlerts.filter(singelAlert => {\n        return singelAlert.service == currentFilters.service;\n      });\n    if (currentFilters.messageType != messageTypes.ALL)\n      filteredAlerts = filteredAlerts.filter(singelAlert => {\n        return singelAlert.messageType == currentFilters.messageType;\n      });\n    if (currentFilters.status != status.ALL)\n      filteredAlerts = filteredAlerts.filter(singelAlert => {\n        return singelAlert.status == currentFilters.status;\n      });\n    currentFilteredAlerts = filteredAlerts; //keeping the current filtered alerts\n    alerts = filteredAlerts; //update the alerts to update the Rendering\n  }\n\n  $: if (searchText) {\n    searchAlertsText();\n  }\n  function searchAlertsText() {\n    alerts = currentFilteredAlerts.filter(singleAlert => {\n      return singleAlert.text.includes(searchText);\n    });\n  }\n  function resetFilters() {\n    currentFilters = {\n      service: \"ALL\",\n      messageType: messageTypes.ALL,\n      status: status.ALL\n    };\n    document.getElementById(\"InputSearch\").value = \"\";\n    filterAlerts(formatedAlerts);\n  }\n  function getServices() {\n    servicesLoading = true;\n    services = formatedAlerts.map(singleAlert => singleAlert.service);\n    services = Array.from([...new Set(services)]); //Making services unique and convert it from set to array\n    services.unshift(\"ALL\"); //Add \"All\" in the begining of the array\n    servicesLoading = false;\n  }\n\n  function deleteAllAlerts() {\n    deleteAll()\n      .then(res => {\n        alerts = [];\n        isAllAlertsDeleted = true;\n      })\n      .catch(err => {\n        console.log(\"error while deleting all alerts\", err);\n      });\n  }\n</script>\n\n<style>\n  .search-width {\n    width: 350px;\n  }\n</style>\n\n<div>\n  <Navigation />\n</div>\n\n<!--[Container]-->\n<div class=\"container-fluid\">\n  <!--[Title]-->\n  <div class=\"m-3 text-center\">\n    <h1>Central Alert System</h1>\n  </div>\n  <!--[Filters]-->\n  <div class=\"row m-5\">\n    <div class=\"col-sm-12\">\n      <div class=\"d-flex justify-content-start\">\n        <!--[Search]-->\n        <div class=\"mx-4 search-width\">\n          <input\n            type=\"search\"\n            class=\"form-control\"\n            id=\"InputSearch\"\n            placeholder=\"Search text\"\n            bind:value={searchText} />\n\n        </div>\n        <!--[Services]-->\n        <!-- content here -->\n        <div class=\"dropdown mx-2\">\n          <button\n            class=\"btn btn-light dropdown-toggle pointer\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            disabled={servicesLoading}>\n            Services\n          </button>\n          {#if services && services.length > 0}\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              {#each services as service}\n                <!-- content here -->\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  on:click={() => updateFilters(service, currentFilters.messageType, currentFilters.status)}>\n                  {service}\n                </a>\n              {/each}\n            </div>\n          {/if}\n        </div>\n        <!--[Message-Type]-->\n        <div class=\"dropdown mx-2\">\n          <button\n            class=\"btn btn-light dropdown-toggle pointer\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            disabled={servicesLoading}>\n            Message type\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, messageTypes.ALL, currentFilters.status)}>\n              All\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, messageTypes.ERROR, currentFilters.status)}>\n              Error\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, messageTypes.INFORMATION, currentFilters.status)}>\n              Information\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, messageTypes.WARNING, currentFilters.status)}>\n              Warning\n            </a>\n\n          </div>\n        </div>\n        <!--[Status]-->\n        <div class=\"dropdown mx-2\">\n          <button\n            class=\"btn btn-light dropdown-toggle pointer\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            disabled={servicesLoading}>\n            Status\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, currentFilters.messageType, status.ALL)}>\n              All\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, currentFilters.messageType, status.NEW)}>\n              New\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, currentFilters.messageType, status.OPEN)}>\n              Open\n            </a>\n            <a\n              class=\"dropdown-item\"\n              href=\"#\"\n              on:click={() => updateFilters(currentFilters.service, currentFilters.messageType, status.CLOSED)}>\n              Closed\n            </a>\n\n          </div>\n        </div>\n\n        <!--[Reset-Filter]-->\n        <div class=\"mx-2\">\n          <button\n            type=\"button\"\n            class=\"btn btn-light pointer\"\n            on:click={() => resetFilters()}\n            disabled={servicesLoading}>\n            Reset Filters\n          </button>\n        </div>\n        <!--[Delete-Alerts]-->\n        <div class=\"mx-2\">\n          <button\n            type=\"button\"\n            class=\"btn btn-light pointer\"\n            on:click={() => deleteAllAlerts()}\n            disabled={servicesLoading}>\n            Delete Alerts\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--[Tabs]-->\n  <div class=\"row mt-4\">\n    <div class=\"col-sm-12 ml-4\">\n      <div>\n        <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link active\"\n              id=\"pills-all-tab\"\n              data-toggle=\"pill\"\n              href=\"#pills-all\"\n              role=\"tab\"\n              aria-controls=\"pills-all\"\n              aria-selected=\"true\"\n              on:click={() => updateAlerts(environments.ALL)}>\n              All\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              id=\"infra-profile-tab\"\n              data-toggle=\"pill\"\n              href=\"#pills-infra\"\n              role=\"tab\"\n              aria-controls=\"pills-infra\"\n              aria-selected=\"false\"\n              on:click={() => updateAlerts(environments.INFRA)}>\n              Infrastructure\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              id=\"pills-prod-tab\"\n              data-toggle=\"pill\"\n              href=\"#pills-prod\"\n              role=\"tab\"\n              aria-controls=\"pills-prod\"\n              aria-selected=\"false\"\n              on:click={() => updateAlerts(environments.PROD)}>\n              Production\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              id=\"pills-development-tab\"\n              data-toggle=\"pill\"\n              href=\"#pills-development\"\n              role=\"tab\"\n              aria-controls=\"pills-development\"\n              aria-selected=\"false\"\n              on:click={() => updateAlerts(environments.DEV)}>\n              Development\n            </a>\n          </li>\n        </ul>\n        <div class=\"tab-content\" id=\"pills-tabContent\">\n          <div\n            class=\"tab-pane fade show active\"\n            id=\"pills-all\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-all-tab\" />\n          <div\n            class=\"tab-pane fade\"\n            id=\"pills-infra\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-infra-tab\" />\n          <div\n            class=\"tab-pane fade\"\n            id=\"pills-prod\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-prod-tab\" />\n          <div\n            class=\"tab-pane fade\"\n            id=\"pills-development\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-development-tab\" />\n        </div>\n      </div>\n\n    </div>\n  </div>\n  <!--[Alerts]-->\n  {#if alerts && alerts != '' && isAlertsLoaded && !isAllAlertsDeleted}\n    <!-- content here -->\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n        <Alerts {alerts} />\n      </div>\n    </div>\n  {:else if !isAlertsLoaded && !isAllAlertsDeleted}\n    <div class=\"text-center\">\n      <img src={'/img/loader.gif'} class=\"img-fluid\" alt=\"Responsive image\" />\n    </div>\n  {:else if isAlertsLoaded && isAllAlertsDeleted}\n    <div class=\"mt-5 text-center\">\n      <h2>All the alerts have been deleted.</h2>\n    </div>\n  {:else}\n    <div class=\"mt-5 text-center\">\n      <h2>There is no alerts matching your criteria</h2>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n\t// import active from 'svelte-spa-router/active';\n\t// import {\n\t// \tlink,\n\t// \tpush,\n\t// \tpop,\n\t// \treplace,\n\t// \tlocation,\n\t// \tquerystring,\n\t// } from 'svelte-spa-router';\n</script>\n\n<style>\n\t/* Style for \"active\" links; need to mark this :global because the router adds the class directly */\n\t:global(a.my-active) {\n\t\tcolor: #9d9d9d !important;\n\t}\n</style>\n\n<div>\n\t<nav class=\"navbar navbar-expand-lg navbar navbar-primary bg-primary\">\n\t\t<a class=\"navbar-brand text-white\" href=\"#\">Central Alert System</a>\n\t\t<button\n\t\t\tclass=\"navbar-toggler\"\n\t\t\ttype=\"button\"\n\t\t\tdata-toggle=\"collapse\"\n\t\t\tdata-target=\"#navbarText\"\n\t\t\taria-controls=\"navbarText\"\n\t\t\taria-expanded=\"false\"\n\t\t\taria-label=\"Toggle navigation\">\n\t\t\t<span class=\"navbar-toggler-icon\" />\n\t\t</button>\n\t\t<div class=\"collapse navbar-collapse\" id=\"navbarText\">\n\t\t\t<ul class=\"navbar-nav mr-auto\">\n\t\t\t\t<li class=\"nav-item active\">\n\t\t\t\t\t<a class=\"nav-link text-white\" href=\"/\">\n\t\t\t\t\t\tHome\n\t\t\t\t\t\t<span class=\"sr-only\">(current)</span>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<span class=\"navbar-text text-white\">\n\t\t\t\tCenral system to track all alerts\n\t\t\t</span>\n\t\t</div>\n\t</nav>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA8IE,aAAa,cAAC,CAAC,AACb,KAAK,CAAE,KAAK,AACd,CAAC;AClIM,WAAW,AAAE,CAAC,AACrB,KAAK,CAAE,OAAO,CAAC,UAAU,AAC1B,CAAC"
}